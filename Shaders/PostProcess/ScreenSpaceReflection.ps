#include "CameraBuffer.hlsl"

struct PS_In
{
	float4 clipPos : SV_POSITION;
	float2 texCoord : TEXCOORD;
};

Texture2D DiffuseMap;
Texture2D SpecularMap;
Texture2D NormalMap;
Texture2D PositionMap;
SamplerState Sampler;

float4 textureGL(Texture2D tex, float2 texCoord)
{
	return tex.Sample(Sampler, texCoord);
}

float2 textureSizeGL(Texture2D tex, int tmp)
{
	float w, h;
	tex.GetDimensions(w, h);
	return float2(w, h);
}

float4 main(PS_In pIn) : SV_TARGET
{
	float2 texCoord = pIn.texCoord;

	float3 p = PositionMap.Sample(Sampler, texCoord).xyz;
	float3 n = normalize(NormalMap.Sample(Sampler, texCoord)).xyz;	
	float3 v = -normalize(p);
	float3 r = reflect(v, n);
	
	//return float4(DiffuseMap.Sample(Sampler, texCoord).xyz, length(r));
	return float4(1, 0, 0, 0.6);
}